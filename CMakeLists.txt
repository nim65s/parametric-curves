CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

SET(PROJECT_NAMESPACE stack-of-tasks)
SET(PROJECT_NAME parametric-curves)
SET(PROJECT_DESCRIPTION "Template based classes for creating and manipulating parametric curves. Comes with extra options specific to end-effector trajectories in robotics." )
SET(PROJECT_URL "http://github.com/${PROJECT_NAMESPACE}/${PROJECT_NAME}")

INCLUDE(cmake/base.cmake)
INCLUDE(cmake/boost.cmake)
INCLUDE(cmake/eigen.cmake)
INCLUDE(cmake/python.cmake)
INCLUDE(cmake/test.cmake)

SET(DOXYGEN_USE_MATHJAX yes)
SET(CUSTOM_HEADER_DIR ${PROJECT_NAME})
SET(CXX_DISABLE_WERROR True)
SET(CMAKE_VERBOSE_MAKEFILE True)

COMPUTE_PROJECT_ARGS(PROJECT_ARGS LANGUAGES CXX)
PROJECT(${PROJECT_NAME} ${PROJECT_ARGS})

ADD_REQUIRED_DEPENDENCY("eigen3 >= 3.0.5")
SET(BOOST_REQUIERED_COMPONENTS serialization)
SET(BOOST_OPTIONAL_COMPONENTS "")

OPTION (BUILD_PYTHON_INTERFACE "Build the python binding" ON)
OPTION (INSTALL_PYTHON_INTERFACE_ONLY "Install only the python binding" OFF)
IF(BUILD_PYTHON_INTERFACE)
  SET(BOOST_OPTIONAL_COMPONENTS ${BOOST_OPTIONAL_COMPONENTS} python)
  FINDPYTHON()
  INCLUDE_DIRECTORIES( ${PYTHON_INCLUDE_DIRS} )
  ADD_COMPILE_DEPENDENCY("eigenpy >= 1.3.1")
ENDIF(BUILD_PYTHON_INTERFACE)

SET(BOOST_COMPONENTS ${BOOST_REQUIERED_COMPONENTS} ${BOOST_OPTIONAL_COMPONENTS} ${BOOST_BUILD_COMPONENTS})
SEARCH_FOR_BOOST()
SEARCH_FOR_EIGEN()
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

IF(BUILD_PYTHON_INTERFACE)
  STRING(REGEX REPLACE "-" "_" PY_NAME ${PROJECT_NAME})
  SET(PYWRAP ${PY_NAME}_pywrap)
  ADD_SUBDIRECTORY(python)
ENDIF(BUILD_PYTHON_INTERFACE)

IF(NOT INSTALL_PYTHON_INTERFACE_ONLY)
  ADD_SUBDIRECTORY (include/${CUSTOM_HEADER_DIR})
ENDIF(NOT INSTALL_PYTHON_INTERFACE_ONLY)
ADD_SUBDIRECTORY (src/tests/spline_test)

ADD_CUSTOM_TARGET(check COMMAND ${CMAKE_CTEST_COMMAND})

PKG_CONFIG_APPEND_BOOST_LIBS(${BOOST_REQUIERED_COMPONENTS})
